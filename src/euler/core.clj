(ns euler.core
  (:use euler.math
        euler.combinators
        euler.combinatorics
        euler.sequences
        euler.strings
        euler.primes))

(defn p1
  "If we list all the natural numbers below 10 that are multiples of 3 or 5, we
  get 3, 5, 6 and 9. The sum of these multiples is 23.

  Find the sum of all the multiples of 3 or 5 below 1000."
  []
  (sum (take-while (partial > 1000)
                   (filter (or* (partial divisible? 3)
                                (partial divisible? 5))
                           N))))

(defn p2
  "Each new term in the Fibonacci sequence is generated by adding the previous
  two terms. By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed
  four million, find the sum of the even-valued terms."
  []
  (sum (filter even? (take-while (partial > 4000000) (fibonacci)))))

(defn p3
  "The prime factors of 13195 are 5, 7, 13 and 29.

  What is the largest prime factor of the number 600851475143 ?"
  []
  (apply max (prime-factorization 600851475143)))

(defn p4
  "A palindromic number reads the same both ways. The largest palindrome made
  from the product of two 2-digit numbers is 9009 = 91 x 99.

  Find the largest palindrome made from the product of two 3-digit numbers.OB"
  []
  ; I know a closed-form expression for this in the two-product case, but
  ; a solution general in the number of products turned out to be more
  ; interesting.
  (apply max
         (filter palindrome?
                 (map (partial apply *)
                      (handshake-product (range 999 100 -1) 2)))))
